//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WpfAppProjekty.localhost {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceProjektySoap", Namespace="http://tempuri.org/")]
    public partial class WebServiceProjekty : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloOperationCompleted;
        
        private System.Threading.SendOrPostCallback ByeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectsIdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindSubstringIndexOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindSubstringIndex2OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebServiceProjekty() {
            this.Url = global::WpfAppProjekty.Properties.Settings.Default.WpfAppProjekty_localhost_WebServiceProjekty;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloCompletedEventHandler HelloCompleted;
        
        /// <remarks/>
        public event ByeCompletedEventHandler ByeCompleted;
        
        /// <remarks/>
        public event GetProjectsCountCompletedEventHandler GetProjectsCountCompleted;
        
        /// <remarks/>
        public event GetProjectsIdsCompletedEventHandler GetProjectsIdsCompleted;
        
        /// <remarks/>
        public event GetProjectCompletedEventHandler GetProjectCompleted;
        
        /// <remarks/>
        public event AddProjectCompletedEventHandler AddProjectCompleted;
        
        /// <remarks/>
        public event UpdateProjectCompletedEventHandler UpdateProjectCompleted;
        
        /// <remarks/>
        public event RemoveProjectCompletedEventHandler RemoveProjectCompleted;
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event FindSubstringIndexCompletedEventHandler FindSubstringIndexCompleted;
        
        /// <remarks/>
        public event FindSubstringIndex2CompletedEventHandler FindSubstringIndex2Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Hello", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Hello(string password) {
            object[] results = this.Invoke("Hello", new object[] {
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HelloAsync(string password) {
            this.HelloAsync(password, null);
        }
        
        /// <remarks/>
        public void HelloAsync(string password, object userState) {
            if ((this.HelloOperationCompleted == null)) {
                this.HelloOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloOperationCompleted);
            }
            this.InvokeAsync("Hello", new object[] {
                        password}, this.HelloOperationCompleted, userState);
        }
        
        private void OnHelloOperationCompleted(object arg) {
            if ((this.HelloCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloCompleted(this, new HelloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Bye", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Bye() {
            object[] results = this.Invoke("Bye", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ByeAsync() {
            this.ByeAsync(null);
        }
        
        /// <remarks/>
        public void ByeAsync(object userState) {
            if ((this.ByeOperationCompleted == null)) {
                this.ByeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnByeOperationCompleted);
            }
            this.InvokeAsync("Bye", new object[0], this.ByeOperationCompleted, userState);
        }
        
        private void OnByeOperationCompleted(object arg) {
            if ((this.ByeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ByeCompleted(this, new ByeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectsCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetProjectsCount() {
            object[] results = this.Invoke("GetProjectsCount", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectsCountAsync() {
            this.GetProjectsCountAsync(null);
        }
        
        /// <remarks/>
        public void GetProjectsCountAsync(object userState) {
            if ((this.GetProjectsCountOperationCompleted == null)) {
                this.GetProjectsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectsCountOperationCompleted);
            }
            this.InvokeAsync("GetProjectsCount", new object[0], this.GetProjectsCountOperationCompleted, userState);
        }
        
        private void OnGetProjectsCountOperationCompleted(object arg) {
            if ((this.GetProjectsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectsCountCompleted(this, new GetProjectsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectsIds", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetProjectsIds() {
            object[] results = this.Invoke("GetProjectsIds", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectsIdsAsync() {
            this.GetProjectsIdsAsync(null);
        }
        
        /// <remarks/>
        public void GetProjectsIdsAsync(object userState) {
            if ((this.GetProjectsIdsOperationCompleted == null)) {
                this.GetProjectsIdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectsIdsOperationCompleted);
            }
            this.InvokeAsync("GetProjectsIds", new object[0], this.GetProjectsIdsOperationCompleted, userState);
        }
        
        private void OnGetProjectsIdsOperationCompleted(object arg) {
            if ((this.GetProjectsIdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectsIdsCompleted(this, new GetProjectsIdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetProject(string id, out string name, out string abbreviation, out string customer) {
            object[] results = this.Invoke("GetProject", new object[] {
                        id});
            name = ((string)(results[1]));
            abbreviation = ((string)(results[2]));
            customer = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectAsync(string id) {
            this.GetProjectAsync(id, null);
        }
        
        /// <remarks/>
        public void GetProjectAsync(string id, object userState) {
            if ((this.GetProjectOperationCompleted == null)) {
                this.GetProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectOperationCompleted);
            }
            this.InvokeAsync("GetProject", new object[] {
                        id}, this.GetProjectOperationCompleted, userState);
        }
        
        private void OnGetProjectOperationCompleted(object arg) {
            if ((this.GetProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectCompleted(this, new GetProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddProject(string id, string name, string abbreviation, string customer) {
            object[] results = this.Invoke("AddProject", new object[] {
                        id,
                        name,
                        abbreviation,
                        customer});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddProjectAsync(string id, string name, string abbreviation, string customer) {
            this.AddProjectAsync(id, name, abbreviation, customer, null);
        }
        
        /// <remarks/>
        public void AddProjectAsync(string id, string name, string abbreviation, string customer, object userState) {
            if ((this.AddProjectOperationCompleted == null)) {
                this.AddProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddProjectOperationCompleted);
            }
            this.InvokeAsync("AddProject", new object[] {
                        id,
                        name,
                        abbreviation,
                        customer}, this.AddProjectOperationCompleted, userState);
        }
        
        private void OnAddProjectOperationCompleted(object arg) {
            if ((this.AddProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddProjectCompleted(this, new AddProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateProject(string id, string name, string abbreviation, string customer) {
            object[] results = this.Invoke("UpdateProject", new object[] {
                        id,
                        name,
                        abbreviation,
                        customer});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateProjectAsync(string id, string name, string abbreviation, string customer) {
            this.UpdateProjectAsync(id, name, abbreviation, customer, null);
        }
        
        /// <remarks/>
        public void UpdateProjectAsync(string id, string name, string abbreviation, string customer, object userState) {
            if ((this.UpdateProjectOperationCompleted == null)) {
                this.UpdateProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateProjectOperationCompleted);
            }
            this.InvokeAsync("UpdateProject", new object[] {
                        id,
                        name,
                        abbreviation,
                        customer}, this.UpdateProjectOperationCompleted, userState);
        }
        
        private void OnUpdateProjectOperationCompleted(object arg) {
            if ((this.UpdateProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateProjectCompleted(this, new UpdateProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveProject(string id) {
            object[] results = this.Invoke("RemoveProject", new object[] {
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveProjectAsync(string id) {
            this.RemoveProjectAsync(id, null);
        }
        
        /// <remarks/>
        public void RemoveProjectAsync(string id, object userState) {
            if ((this.RemoveProjectOperationCompleted == null)) {
                this.RemoveProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveProjectOperationCompleted);
            }
            this.InvokeAsync("RemoveProject", new object[] {
                        id}, this.RemoveProjectOperationCompleted, userState);
        }
        
        private void OnRemoveProjectOperationCompleted(object arg) {
            if ((this.RemoveProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveProjectCompleted(this, new RemoveProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FindSubstringIndex", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int FindSubstringIndex(string str, string subs) {
            object[] results = this.Invoke("FindSubstringIndex", new object[] {
                        str,
                        subs});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FindSubstringIndexAsync(string str, string subs) {
            this.FindSubstringIndexAsync(str, subs, null);
        }
        
        /// <remarks/>
        public void FindSubstringIndexAsync(string str, string subs, object userState) {
            if ((this.FindSubstringIndexOperationCompleted == null)) {
                this.FindSubstringIndexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindSubstringIndexOperationCompleted);
            }
            this.InvokeAsync("FindSubstringIndex", new object[] {
                        str,
                        subs}, this.FindSubstringIndexOperationCompleted, userState);
        }
        
        private void OnFindSubstringIndexOperationCompleted(object arg) {
            if ((this.FindSubstringIndexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindSubstringIndexCompleted(this, new FindSubstringIndexCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FindSubstringIndex2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FindSubstringIndex2(string str, string subs, out int index) {
            object[] results = this.Invoke("FindSubstringIndex2", new object[] {
                        str,
                        subs});
            index = ((int)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FindSubstringIndex2Async(string str, string subs) {
            this.FindSubstringIndex2Async(str, subs, null);
        }
        
        /// <remarks/>
        public void FindSubstringIndex2Async(string str, string subs, object userState) {
            if ((this.FindSubstringIndex2OperationCompleted == null)) {
                this.FindSubstringIndex2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindSubstringIndex2OperationCompleted);
            }
            this.InvokeAsync("FindSubstringIndex2", new object[] {
                        str,
                        subs}, this.FindSubstringIndex2OperationCompleted, userState);
        }
        
        private void OnFindSubstringIndex2OperationCompleted(object arg) {
            if ((this.FindSubstringIndex2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindSubstringIndex2Completed(this, new FindSubstringIndex2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void HelloCompletedEventHandler(object sender, HelloCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void ByeCompletedEventHandler(object sender, ByeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ByeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ByeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetProjectsCountCompletedEventHandler(object sender, GetProjectsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetProjectsIdsCompletedEventHandler(object sender, GetProjectsIdsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectsIdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectsIdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void GetProjectCompletedEventHandler(object sender, GetProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string abbreviation {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string customer {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void AddProjectCompletedEventHandler(object sender, AddProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void UpdateProjectCompletedEventHandler(object sender, UpdateProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void RemoveProjectCompletedEventHandler(object sender, RemoveProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void FindSubstringIndexCompletedEventHandler(object sender, FindSubstringIndexCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindSubstringIndexCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindSubstringIndexCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void FindSubstringIndex2CompletedEventHandler(object sender, FindSubstringIndex2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindSubstringIndex2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindSubstringIndex2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int index {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591